<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bash on MerrimanLab</title>
    <link>https://merrimanlab.github.io/tags/bash/</link>
    <description>Recent content in bash on MerrimanLab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Tue, 21 Sep 2021 11:29:24 +1300</lastBuildDate>
    
        <atom:link href="https://merrimanlab.github.io/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>Adding Annotations to VCFs</title>
        <link>https://merrimanlab.github.io/post/2021-09-21-vcf-annotation/</link>
        <pubDate>Tue, 21 Sep 2021 11:29:24 +1300</pubDate>
        
        <guid>https://merrimanlab.github.io/post/2021-09-21-vcf-annotation/</guid>
        <description>The main consideration is to make sure that the reference resource matches the genomic build of your VCF. i.e. make sure you are using GRCh37 resources for a GRCh37 aligned VCF, or GRCh38 resources for a GRCh38 aligned VCF.
dbSNP A vcf from dbSNP can be used to annotate rsIDs into the ID column of a vcf. For instance the dbSNP v151 VCF can be downloaded here ftp://ftp.ncbi.nih.gov/snp/organisms/human_9606_b151_GRCh37p13/VCF/ - one key thing is make sure that you use the same genome build as your VCF that you want to annotate.</description>
      </item>
      
      <item>
        <title>More on less</title>
        <link>https://merrimanlab.github.io/post/2020-10-20-less/</link>
        <pubDate>Tue, 20 Oct 2020 13:37:24 +1300</pubDate>
        
        <guid>https://merrimanlab.github.io/post/2020-10-20-less/</guid>
        <description>This post will cover some of the useful features in less that will let you look at any text-based document like a wizard!!
Scroll through page-wise As you may already know, you can use &amp;lt;space&amp;gt; to move one window forward in the document, but did you know there are ways to go back window-wise? Here is a table of some of the useful ways you can scroll through the document more efficiently (NOTE: ^ means press the &amp;lt;control&amp;gt; key with the following key):</description>
      </item>
      
      <item>
        <title>GNU parallel</title>
        <link>https://merrimanlab.github.io/post/2020-10-19-parallel/</link>
        <pubDate>Mon, 19 Oct 2020 13:22:48 +1300</pubDate>
        
        <guid>https://merrimanlab.github.io/post/2020-10-19-parallel/</guid>
        <description>Intro GNU parallel (commonly referred to as just parallel) is a command line tool that allows you to run multiple independent tasks at the same time by using the available cores on a computer.
This post will cover:
 How to use parallel Some useful features provided by parallel  Basic usage The basic syntax of a parallel command is:
parallel &amp;quot;&amp;lt;command&amp;gt; {}&amp;quot; ::: &amp;lt;input&amp;gt; where &amp;lt;command&amp;gt; is the command you want to run in parallel for all the &amp;lt;input&amp;gt; you provide.</description>
      </item>
      
      <item>
        <title>Config files</title>
        <link>https://merrimanlab.github.io/post/config-files/</link>
        <pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate>
        
        <guid>https://merrimanlab.github.io/post/config-files/</guid>
        <description>Config files, sometimes referred to as dot-files, are files that you can make to customise the way a program behaves. Two such files you might like to create are .bashrc to customise how your bash looks and behaves, and .Rprofile to customise how R looks and behaves. Usually these files live in you home directory (~/) and because they have a &amp;lsquo;.&amp;rsquo; at the start are hidden from view by default but in bash you can view these hidden files with ls -A ~/.</description>
      </item>
      
      <item>
        <title>Search for file under a directory</title>
        <link>https://merrimanlab.github.io/post/find_file_in_dir/</link>
        <pubDate>Tue, 22 Sep 2020 08:50:27 +1200</pubDate>
        
        <guid>https://merrimanlab.github.io/post/find_file_in_dir/</guid>
        <description>Search for file using &amp;ldquo;find&amp;rdquo; command Per man find:
 The find utility recursively descends the directory tree for each path
listed, evaluating an expression (composed of the &amp;ldquo;primaries&amp;rdquo; and
&amp;ldquo;operands&amp;rdquo; listed below) in terms of each file in the tree.
 Search for a file under a directory You can search for a file with specific name like so:
find /path/to/search -name &amp;lt;name of file/dir&amp;gt; The default path to search is the current directory .</description>
      </item>
      
    
  </channel>
</rss>